{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JISHN\\\\Documents\\\\projects\\\\react\\\\Netflix\\\\netflix-clone\\\\src\\\\components\\\\RowPost\\\\action.js\";\nimport React from 'react';\nfunction action(props) {\n  onst[(Movie, setMovie)] = useState([]);\n  const [UrlId, setUrlId] = useState([]);\n  useEffect(() => {\n    axios.get(props.url).then(Response => {\n      setMovie(Response.data.results);\n    });\n  }, []);\n  const opts = {\n    height: '390',\n    width: '100%',\n    playerVars: {\n      autoplay: 1\n    }\n  };\n  const handleMovie = Id => {\n    axios.get(`https://api.themoviedb.org/3/movie/${Id}/videos?api_key=${API_KEY}`).then(response => {\n      if (response.data.results.length !== 0) {\n        setUrlId(response.data.results[0].key);\n        // console.log(response.data.results[0].key);\n      } else {\n        console.log('No trailer available');\n      }\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    id: \"action\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }\n  }, props.title), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"posters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, Movie.map(obj => /*#__PURE__*/React.createElement(\"img\", {\n    onClick: () => handleMovie(obj.id),\n    className: props.isSmall ? 'smallPoster' : 'poster',\n    src: `${imageUrl + obj.backdrop_path}`,\n    alt: \"image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 6\n    }\n  }, \" \", UrlId && /*#__PURE__*/React.createElement(YouTube, {\n    videoId: UrlId,\n    opts: opts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 22\n    }\n  })));\n}\nexport default action;","map":{"version":3,"names":["React","action","props","onst","Movie","setMovie","useState","UrlId","setUrlId","useEffect","axios","get","url","then","Response","data","results","opts","height","width","playerVars","autoplay","handleMovie","Id","API_KEY","response","length","key","console","log","createElement","className","id","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","title","map","obj","onClick","isSmall","src","imageUrl","backdrop_path","alt","YouTube","videoId"],"sources":["C:/Users/JISHN/Documents/projects/react/Netflix/netflix-clone/src/components/RowPost/action.js"],"sourcesContent":["import React from 'react'\r\n\r\n\r\nfunction action(props) {\r\n    onst [Movie, setMovie] = useState([])\r\n    const [UrlId,setUrlId]=useState([])\r\n    useEffect(() => {\r\n      axios.get(props.url).then((Response) => {\r\n        setMovie(Response.data.results)\r\n      })\r\n    }, [])\r\n  \r\n    const opts = {\r\n      height: '390',\r\n      width: '100%',\r\n      playerVars: {\r\n        autoplay: 1,\r\n      },\r\n    };\r\n  \r\n    const handleMovie=(Id)=>{\r\n  axios.get(`https://api.themoviedb.org/3/movie/${Id}/videos?api_key=${API_KEY}`).then((response)=>{\r\n    if (response.data.results.length!==0) {\r\n      setUrlId(response.data.results[0].key);\r\n      // console.log(response.data.results[0].key);\r\n    } else {\r\n      console.log('No trailer available');\r\n    }\r\n    \r\n  })\r\n    }\r\n\r\n  return (\r\n    <div className='row' id='action'>\r\n           <h2>{props.title}</h2>\r\n      <div className=\"posters\">\r\n        {\r\n          Movie.map((obj) =>\r\n              <img onClick={()=>handleMovie(obj.id)} className={props.isSmall ? 'smallPoster' : 'poster'} src={`${imageUrl+obj.backdrop_path}`} alt=\"image\"  />\r\n  \r\n          )\r\n        }\r\n        \r\n      </div>\r\n     <div> {UrlId && <YouTube videoId={UrlId} opts={opts} /> }</div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default action"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,SAASC,MAAMA,CAACC,KAAK,EAAE;EACnBC,IAAI,EAAEC,KAAK,EAAEC,QAAQ,EAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EACrC,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAACF,QAAQ,CAAC,EAAE,CAAC;EACnCG,SAAS,CAAC,MAAM;IACdC,KAAK,CAACC,GAAG,CAACT,KAAK,CAACU,GAAG,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;MACtCT,QAAQ,CAACS,QAAQ,CAACC,IAAI,CAACC,OAAO,CAAC;IACjC,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,IAAI,GAAG;IACXC,MAAM,EAAE,KAAK;IACbC,KAAK,EAAE,MAAM;IACbC,UAAU,EAAE;MACVC,QAAQ,EAAE;IACZ;EACF,CAAC;EAED,MAAMC,WAAW,GAAEC,EAAE,IAAG;IAC1Bb,KAAK,CAACC,GAAG,CAAE,sCAAqCY,EAAG,mBAAkBC,OAAQ,EAAC,CAAC,CAACX,IAAI,CAAEY,QAAQ,IAAG;MAC/F,IAAIA,QAAQ,CAACV,IAAI,CAACC,OAAO,CAACU,MAAM,KAAG,CAAC,EAAE;QACpClB,QAAQ,CAACiB,QAAQ,CAACV,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACW,GAAG,CAAC;QACtC;MACF,CAAC,MAAM;QACLC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;MACrC;IAEF,CAAC,CAAC;EACA,CAAC;EAEH,oBACE7B,KAAA,CAAA8B,aAAA;IAAKC,SAAS,EAAC,KAAK;IAACC,EAAE,EAAC,QAAQ;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACzBtC,KAAA,CAAA8B,aAAA;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAKpC,KAAK,CAACqC,KAAU,CAAC,eAC3BvC,KAAA,CAAA8B,aAAA;IAAKC,SAAS,EAAC,SAAS;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAEpBlC,KAAK,CAACoC,GAAG,CAAEC,GAAG,iBACVzC,KAAA,CAAA8B,aAAA;IAAKY,OAAO,EAAEA,CAAA,KAAIpB,WAAW,CAACmB,GAAG,CAACT,EAAE,CAAE;IAACD,SAAS,EAAE7B,KAAK,CAACyC,OAAO,GAAG,aAAa,GAAG,QAAS;IAACC,GAAG,EAAG,GAAEC,QAAQ,GAACJ,GAAG,CAACK,aAAc,EAAE;IAACC,GAAG,EAAC,OAAO;IAAAd,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAG,CAEpJ,CAGC,CAAC,eACPtC,KAAA,CAAA8B,aAAA;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAK,GAAC,EAAC/B,KAAK,iBAAIP,KAAA,CAAA8B,aAAA,CAACkB,OAAO;IAACC,OAAO,EAAE1C,KAAM;IAACU,IAAI,EAAEA,IAAK;IAAAgB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAQ,CAC1D,CAAC;AAEV;AAEA,eAAerC,MAAM"},"metadata":{},"sourceType":"module"}