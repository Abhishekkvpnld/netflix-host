{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JISHN\\\\Documents\\\\projects\\\\react\\\\Netflix\\\\netflix-clone\\\\src\\\\components\\\\RowPost\\\\TvShows.js\";\nimport React, { useState, useEffect } from 'react';\nimport \"./TvShows.css\";\nimport axios from \"../../axios/axios\";\nimport { imageUrl, API_KEY } from '../../constants/constants';\nimport YouTube from 'react-youtube';\nfunction TvShows(props) {\n  const [Movie, setMovie] = useState([]);\n  const [UrlId, setUrlId] = useState([]);\n  useEffect(() => {\n    axios.get(props.url).then(response => {\n      setMovie(response.data.results);\n    }).catch(error => {\n      console.error('Error fetching TV show data:', error);\n    });\n  }, [props.url]);\n  const opts = {\n    height: '390',\n    width: '100%',\n    playerVars: {\n      autoplay: 1\n    }\n  };\n  const handleMovie = Id => {\n    axios.get(`https://api.themoviedb.org/3/movie/${Id}/videos?api_key=${API_KEY}`).then(response => {\n      if (response.data.results.length !== 0) {\n        setUrlId(response.data.results[0].key);\n      } else {\n        console.log('No trailer available');\n      }\n    }).catch(error => {\n      console.error('Error fetching video information:', error);\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    id: \"tvshows\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, props.title), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"posters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, Movie.map(obj => /*#__PURE__*/React.createElement(\"img\", {\n    key: obj.id,\n    onClick: () => handleMovie(obj.id),\n    className: 'smallPoster',\n    src: `${imageUrl + obj.backdrop_path}`,\n    alt: \"image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }))), UrlId && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(YouTube, {\n    videoId: UrlId,\n    opts: opts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 22\n    }\n  })));\n}","map":{"version":3,"names":["React","useState","useEffect","axios","imageUrl","API_KEY","YouTube","TvShows","props","Movie","setMovie","UrlId","setUrlId","get","url","then","response","data","results","catch","error","console","opts","height","width","playerVars","autoplay","handleMovie","Id","length","key","log","createElement","className","id","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","title","map","obj","onClick","src","backdrop_path","alt","videoId"],"sources":["C:/Users/JISHN/Documents/projects/react/Netflix/netflix-clone/src/components/RowPost/TvShows.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport \"./TvShows.css\"\r\nimport axios from \"../../axios/axios\"\r\nimport { imageUrl, API_KEY } from '../../constants/constants';\r\nimport YouTube from 'react-youtube'\r\n\r\n\r\nfunction TvShows(props) {\r\n  const [Movie, setMovie] = useState([]);\r\n  const [UrlId, setUrlId] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get(props.url)\r\n      .then((response) => {\r\n        setMovie(response.data.results);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching TV show data:', error);\r\n      });\r\n  }, [props.url]);\r\n\r\n  const opts = {\r\n    height: '390',\r\n    width: '100%',\r\n    playerVars: {\r\n      autoplay: 1,\r\n    },\r\n  };\r\n\r\n  const handleMovie = (Id) => {\r\n    axios.get(`https://api.themoviedb.org/3/movie/${Id}/videos?api_key=${API_KEY}`)\r\n      .then((response) => {\r\n        if (response.data.results.length !== 0) {\r\n          setUrlId(response.data.results[0].key);\r\n        } else {\r\n          console.log('No trailer available');\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching video information:', error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className='row' id='tvshows'>\r\n      <h2>{props.title}</h2>\r\n      <div className=\"posters\">\r\n        {Movie.map((obj) => (\r\n          <img\r\n            key={obj.id}\r\n            onClick={() => handleMovie(obj.id)}\r\n            className={'smallPoster'}\r\n            src={`${imageUrl + obj.backdrop_path}`}\r\n            alt=\"image\"\r\n          />\r\n        ))}\r\n      </div>\r\n      {UrlId && <div><YouTube videoId={UrlId} opts={opts} /></div>}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}