{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\JISHN\\\\Documents\\\\projects\\\\react\\\\Netflix\\\\netflix-clone\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import\"./RowPost.css\";import axios from\"../../axios/axios\";import{imageUrl,API_KEY}from'../../constants/constants';import YouTube from'react-youtube';function RowPost(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),Movie=_useState2[0],setMovie=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),UrlId=_useState4[0],setUrlId=_useState4[1];useEffect(function(){axios.get(props.url).then(function(Response){setMovie(Response.data.results);});},[]);var opts={height:'390',width:'100%',playerVars:{autoplay:1}};var handleMovie=function handleMovie(Id){axios.get(\"https://api.themoviedb.org/3/movie/\".concat(Id,\"/videos?api_key=\").concat(API_KEY)).then(function(response){if(response.data.results.length!==0){setUrlId(response.data.results[0].key);// console.log(response.data.results[0].key);\n}else{console.log('No trailer available');}});};return/*#__PURE__*/React.createElement(\"div\",{className:\"row\",id:\"home\"},/*#__PURE__*/React.createElement(\"h2\",null,props.title),/*#__PURE__*/React.createElement(\"div\",{className:\"posters\"},Movie.map(function(obj){return/*#__PURE__*/React.createElement(\"img\",{onClick:function onClick(){return handleMovie(obj.id);},className:props.isSmall?'smallPoster':'poster',src:\"\".concat(imageUrl+obj.backdrop_path),alt:\"image\"});})),/*#__PURE__*/React.createElement(\"div\",null,\" \",UrlId&&/*#__PURE__*/React.createElement(YouTube,{videoId:UrlId,opts:opts})));}export default RowPost;","map":{"version":3,"names":["React","useState","useEffect","axios","imageUrl","API_KEY","YouTube","RowPost","props","_useState","_useState2","_slicedToArray","Movie","setMovie","_useState3","_useState4","UrlId","setUrlId","get","url","then","Response","data","results","opts","height","width","playerVars","autoplay","handleMovie","Id","concat","response","length","key","console","log","createElement","className","id","title","map","obj","onClick","isSmall","src","backdrop_path","alt","videoId"],"sources":["C:/Users/JISHN/Documents/projects/react/Netflix/netflix-clone/src/components/RowPost/RowPost.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport \"./RowPost.css\"\r\nimport axios from \"../../axios/axios\"\r\nimport { imageUrl,API_KEY } from '../../constants/constants';\r\nimport YouTube from 'react-youtube'\r\n\r\n\r\nfunction RowPost(props) {\r\n  const [Movie, setMovie] = useState([])\r\n  const [UrlId,setUrlId]=useState([])\r\n  useEffect(() => {\r\n    axios.get(props.url).then((Response) => {\r\n      setMovie(Response.data.results)\r\n    })\r\n  }, [])\r\n\r\n  const opts = {\r\n    height: '390',\r\n    width: '100%',\r\n    playerVars: {\r\n      autoplay: 1,\r\n    },\r\n  };\r\n\r\n  const handleMovie=(Id)=>{\r\naxios.get(`https://api.themoviedb.org/3/movie/${Id}/videos?api_key=${API_KEY}`).then((response)=>{\r\n  if (response.data.results.length!==0) {\r\n    setUrlId(response.data.results[0].key);\r\n    // console.log(response.data.results[0].key);\r\n  } else {\r\n    console.log('No trailer available');\r\n  }\r\n  \r\n})\r\n  }\r\n\r\n  return (\r\n    <div className='row' id='home' >\r\n      <h2>{props.title}</h2>\r\n      <div className=\"posters\">\r\n        {\r\n          Movie.map((obj) =>\r\n              <img onClick={()=>handleMovie(obj.id)} className={props.isSmall ? 'smallPoster' : 'poster'} src={`${imageUrl+obj.backdrop_path}`} alt=\"image\"  />\r\n  \r\n          )\r\n        }\r\n        \r\n      </div>\r\n     <div> {UrlId && <YouTube videoId={UrlId} opts={opts} /> }</div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RowPost;"],"mappings":"gMAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,eAAe,CACtB,MAAO,CAAAC,KAAK,KAAM,mBAAmB,CACrC,OAASC,QAAQ,CAACC,OAAO,KAAQ,2BAA2B,CAC5D,MAAO,CAAAC,OAAO,KAAM,eAAe,CAGnC,QAAS,CAAAC,OAAOA,CAACC,KAAK,CAAE,CACtB,IAAAC,SAAA,CAA0BR,QAAQ,CAAC,EAAE,CAAC,CAAAS,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA/BG,KAAK,CAAAF,UAAA,IAAEG,QAAQ,CAAAH,UAAA,IACtB,IAAAI,UAAA,CAAuBb,QAAQ,CAAC,EAAE,CAAC,CAAAc,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAA5BE,KAAK,CAAAD,UAAA,IAACE,QAAQ,CAAAF,UAAA,IACrBb,SAAS,CAAC,UAAM,CACdC,KAAK,CAACe,GAAG,CAACV,KAAK,CAACW,GAAG,CAAC,CAACC,IAAI,CAAC,SAACC,QAAQ,CAAK,CACtCR,QAAQ,CAACQ,QAAQ,CAACC,IAAI,CAACC,OAAO,CAAC,CACjC,CAAC,CAAC,CACJ,CAAC,CAAE,EAAE,CAAC,CAEN,GAAM,CAAAC,IAAI,CAAG,CACXC,MAAM,CAAE,KAAK,CACbC,KAAK,CAAE,MAAM,CACbC,UAAU,CAAE,CACVC,QAAQ,CAAE,CACZ,CACF,CAAC,CAED,GAAM,CAAAC,WAAW,CAAC,QAAZ,CAAAA,WAAWA,CAAEC,EAAE,CAAG,CAC1B3B,KAAK,CAACe,GAAG,uCAAAa,MAAA,CAAuCD,EAAE,qBAAAC,MAAA,CAAmB1B,OAAO,CAAE,CAAC,CAACe,IAAI,CAAC,SAACY,QAAQ,CAAG,CAC/F,GAAIA,QAAQ,CAACV,IAAI,CAACC,OAAO,CAACU,MAAM,GAAG,CAAC,CAAE,CACpChB,QAAQ,CAACe,QAAQ,CAACV,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACW,GAAG,CAAC,CACtC;AACF,CAAC,IAAM,CACLC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC,CACrC,CAEF,CAAC,CAAC,CACA,CAAC,CAED,mBACEpC,KAAA,CAAAqC,aAAA,QAAKC,SAAS,CAAC,KAAK,CAACC,EAAE,CAAC,MAAM,eAC5BvC,KAAA,CAAAqC,aAAA,WAAK7B,KAAK,CAACgC,KAAU,CAAC,cACtBxC,KAAA,CAAAqC,aAAA,QAAKC,SAAS,CAAC,SAAS,EAEpB1B,KAAK,CAAC6B,GAAG,CAAC,SAACC,GAAG,qBACV1C,KAAA,CAAAqC,aAAA,QAAKM,OAAO,CAAE,SAAAA,QAAA,QAAI,CAAAd,WAAW,CAACa,GAAG,CAACH,EAAE,CAAC,EAAC,CAACD,SAAS,CAAE9B,KAAK,CAACoC,OAAO,CAAG,aAAa,CAAG,QAAS,CAACC,GAAG,IAAAd,MAAA,CAAK3B,QAAQ,CAACsC,GAAG,CAACI,aAAa,CAAG,CAACC,GAAG,CAAC,OAAO,CAAG,CAAC,EAErJ,CAGC,CAAC,cACP/C,KAAA,CAAAqC,aAAA,YAAK,GAAC,CAACrB,KAAK,eAAIhB,KAAA,CAAAqC,aAAA,CAAC/B,OAAO,EAAC0C,OAAO,CAAEhC,KAAM,CAACQ,IAAI,CAAEA,IAAK,CAAE,CAAQ,CAE1D,CAAC,CAEV,CAEA,cAAe,CAAAjB,OAAO"},"metadata":{},"sourceType":"module"}