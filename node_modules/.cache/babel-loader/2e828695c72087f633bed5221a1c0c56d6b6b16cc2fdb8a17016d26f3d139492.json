{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JISHN\\\\Documents\\\\projects\\\\react\\\\Netflix\\\\netflix-clone\\\\src\\\\components\\\\RowPost\\\\RowPost.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport \"./RowPost.css\";\nimport axios from \"../../axios/axios\";\nimport { imageUrl, API_KEY } from '../../constants/constants';\nimport YouTube from 'react-youtube';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RowPost(props) {\n  _s();\n  const [Movie, setMovie] = useState([]);\n  const [UrlId, setUrlId] = useState([]);\n  useEffect(() => {\n    axios.get(props.url).then(Response => {\n      setMovie(Response.data.results);\n    });\n  }, []);\n  const opts = {\n    height: '390',\n    width: '100%',\n    playerVars: {\n      autoplay: 0\n    }\n  };\n  const handleMovie = Id => {\n    axios.get(`https://api.themoviedb.org/${Id}/movie/228/videos?api_key=${API_KEY}`).then(reponse => {\n      if (reponse.data.results.length !== 0) {\n        setUrlId(reponse.data.results[0]);\n      }\n      e;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posters\",\n      children: Movie.map(obj => /*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: () => handleMovie(obj.id),\n        className: props.isSmall ? 'smallPoster' : 'poster',\n        src: `${imageUrl + obj.backdrop_path}`,\n        alt: \"image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), UrlId && /*#__PURE__*/_jsxDEV(YouTube, {\n      videoId: UrlId.key,\n      opts: opts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this), \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(RowPost, \"/uH1d6y1oJirgHXesG5HsO+ojUU=\");\n_c = RowPost;\nexport default RowPost;\nvar _c;\n$RefreshReg$(_c, \"RowPost\");","map":{"version":3,"names":["React","useState","useEffect","axios","imageUrl","API_KEY","YouTube","jsxDEV","_jsxDEV","RowPost","props","_s","Movie","setMovie","UrlId","setUrlId","get","url","then","Response","data","results","opts","height","width","playerVars","autoplay","handleMovie","Id","reponse","length","e","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","map","obj","onClick","id","isSmall","src","backdrop_path","alt","videoId","key","_c","$RefreshReg$"],"sources":["C:/Users/JISHN/Documents/projects/react/Netflix/netflix-clone/src/components/RowPost/RowPost.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport \"./RowPost.css\"\r\nimport axios from \"../../axios/axios\"\r\nimport { imageUrl,API_KEY } from '../../constants/constants';\r\nimport YouTube from 'react-youtube'\r\n\r\n\r\nfunction RowPost(props) {\r\n  const [Movie, setMovie] = useState([])\r\n  const [UrlId,setUrlId]=useState([])\r\n  useEffect(() => {\r\n    axios.get(props.url).then((Response) => {\r\n      setMovie(Response.data.results)\r\n    })\r\n  }, [])\r\n\r\n  const opts = {\r\n    height: '390',\r\n    width: '100%',\r\n    playerVars: {\r\n      autoplay: 0,\r\n    },\r\n  };\r\n\r\n  const handleMovie=(Id)=>{\r\naxios.get(`https://api.themoviedb.org/${Id}/movie/228/videos?api_key=${API_KEY}`).then((reponse)=>{\r\n  if(reponse.data.results.length!==0){\r\nsetUrlId(reponse.data.results[0])\r\n  }e\r\n})\r\n  }\r\n\r\n  return (\r\n    <div className='row'>\r\n      <h2>{props.title}</h2>\r\n      <div className=\"posters\">\r\n        {\r\n          Movie.map((obj) =>\r\n\r\n              <img onClick={()=>handleMovie(obj.id)} className={props.isSmall ? 'smallPoster' : 'poster'} src={`${imageUrl+obj.backdrop_path}`} alt=\"image\"  />\r\n\r\n          )\r\n        }\r\n      </div>\r\n     { UrlId && <YouTube videoId={UrlId.key} opts={opts}  />};\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RowPost;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,eAAe;AACtB,OAAOC,KAAK,MAAM,mBAAmB;AACrC,SAASC,QAAQ,EAACC,OAAO,QAAQ,2BAA2B;AAC5D,OAAOC,OAAO,MAAM,eAAe;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGnC,SAASC,OAAOA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,KAAK,EAACC,QAAQ,CAAC,GAACd,QAAQ,CAAC,EAAE,CAAC;EACnCC,SAAS,CAAC,MAAM;IACdC,KAAK,CAACa,GAAG,CAACN,KAAK,CAACO,GAAG,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;MACtCN,QAAQ,CAACM,QAAQ,CAACC,IAAI,CAACC,OAAO,CAAC;IACjC,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,IAAI,GAAG;IACXC,MAAM,EAAE,KAAK;IACbC,KAAK,EAAE,MAAM;IACbC,UAAU,EAAE;MACVC,QAAQ,EAAE;IACZ;EACF,CAAC;EAED,MAAMC,WAAW,GAAEC,EAAE,IAAG;IAC1BzB,KAAK,CAACa,GAAG,CAAE,8BAA6BY,EAAG,6BAA4BvB,OAAQ,EAAC,CAAC,CAACa,IAAI,CAAEW,OAAO,IAAG;MAChG,IAAGA,OAAO,CAACT,IAAI,CAACC,OAAO,CAACS,MAAM,KAAG,CAAC,EAAC;QACrCf,QAAQ,CAACc,OAAO,CAACT,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC;MAC/B;MAACU,CAAC;IACJ,CAAC,CAAC;EACA,CAAC;EAED,oBACEvB,OAAA;IAAKwB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBzB,OAAA;MAAAyB,QAAA,EAAKvB,KAAK,CAACwB;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACtB9B,OAAA;MAAKwB,SAAS,EAAC,SAAS;MAAAC,QAAA,EAEpBrB,KAAK,CAAC2B,GAAG,CAAEC,GAAG,iBAEVhC,OAAA;QAAKiC,OAAO,EAAEA,CAAA,KAAId,WAAW,CAACa,GAAG,CAACE,EAAE,CAAE;QAACV,SAAS,EAAEtB,KAAK,CAACiC,OAAO,GAAG,aAAa,GAAG,QAAS;QAACC,GAAG,EAAG,GAAExC,QAAQ,GAACoC,GAAG,CAACK,aAAc,EAAE;QAACC,GAAG,EAAC;MAAO;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAEpJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEA,CAAC,EACLxB,KAAK,iBAAIN,OAAA,CAACF,OAAO;MAACyC,OAAO,EAAEjC,KAAK,CAACkC,GAAI;MAAC1B,IAAI,EAAEA;IAAK;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAAC,GACzD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEV;AAAC3B,EAAA,CAxCQF,OAAO;AAAAwC,EAAA,GAAPxC,OAAO;AA0ChB,eAAeA,OAAO;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}